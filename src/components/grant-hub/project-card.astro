---
import { paragraphCva, titleCva } from "@/lib/cvas";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import Status from "../ui/status.astro";
import Links from "../ui/links.astro";

interface Props {
  project: {
    title: string;
    description?: string;
    fundingAsk?: string;
    status?: string;
    date?: any;
    image?: any;
    walletAddress?: string;
    ApprovedOn?: string;
    externalUrl?: string;
    allocation?: string;
    links?: {
      github?: string;
      website?: string;
      twitter?: string;
      linkedin?: string;
      telegram?: string;
      youtube?: string;
    };
    approved?: string;
  };
  link?: string;
}

const { project, link } = Astro.props;

const href = {
  href: project?.externalUrl ?? link,
  target: project?.externalUrl ? "_blank" : "_self",
};
---

<li
  class="group flex flex-col gap-3 rounded-2xl border p-4 lg:gap-5 lg:rounded-3xl"
>
  <div class="flex items-center justify-between gap-2">
    <a {...href}>
      <div class="flex items-center gap-2">
        <Image
          src={project?.image ?? "/default/pattern.jpeg"}
          alt={"Idea"}
          width={100}
          height={100}
          class={"aspect-square  w-14 rounded-full object-cover "}
        />
        <div class="flex flex-col items-start justify-center gap-2">
          {
            project?.status && (
              <Status
                type={
                  project?.status === "Accepted" ||
                  project?.status === "Completed"
                    ? "green"
                    : "red"
                }
              >
                {project?.status}
              </Status>
            )
          }
          {
            project?.walletAddress && (
              <small class="line-clamp-1 break-words font-os text-xs text-zinc-700">
                {project?.walletAddress?.slice(0, 10) +
                  "..." +
                  project?.walletAddress?.slice(-10)}
              </small>
            )
          }
        </div>
      </div>
    </a>
    <Links links={project?.links} />
  </div>
  <a {...href}>
    <div class="flex w-full flex-1 flex-col gap-4">
      <div class="flex flex-col gap-1">
        {
          (project?.ApprovedOn || project?.date) && (
            <small class="font-os text-xs font-light">
              {project?.ApprovedOn
                ? project?.ApprovedOn
                : `Submitted on ${project?.date?.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}`}
            </small>
          )
        }
        <h2
          class={titleCva({
            size: "sm",
          })}
        >
          {project?.title}
        </h2>
        <p class={paragraphCva()}>
          {project?.description}
        </p>
      </div>
      <div class="mt-auto flex items-center justify-between">
        <p class={"font-os text-xs font-light md:text-sm"}>
          {
            project?.fundingAsk && (
              <span>Funding Ask : {project?.fundingAsk}</span>
            )
          }
          {
            project?.approved && (
              <span>Approved Amount: {project?.approved}</span>
            )
          }
          {
            project?.allocation &&
              !project?.approved &&
              !project?.fundingAsk && (
                <span>Arb Allocation: {project?.allocation}</span>
              )
          }
        </p>
        <div
          class="-rotate-45 transition-all duration-300 group-hover:rotate-0"
        >
          <Icon name="arrow-circle" class="size-6 stroke-[0.6] text-zinc-500" />
        </div>
      </div>
    </div>
  </a>
</li>
