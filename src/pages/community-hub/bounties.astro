---
import MainWrapper from "@/components/community-hub/head/community-head.astro";
import Button from "@/components/ui/button.astro";
import Seperator from "@/components/ui/seperator.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { Icon } from "astro-icon/components";
import { getCollection, type CollectionEntry } from "astro:content";
import classNames from "classnames";
import NoData from "@/components/ui/placeholders/no-data.astro";
import { isNoDataAvailable } from "@/lib/utils";
import { GITHUB_URL } from "@/consts";
const community: Array<CollectionEntry<"Community_Bounties">> =
  await getCollection("Community_Bounties");
const isNoData = isNoDataAvailable(community);
---

<MainLayout
  image="/meta/hub/comm-5.png"
  title={"Bounties"}
  description={"Arbitrum DAO Bounties incentivize contributors to tackle specific tasks or challenges within the ecosystem. These rewards, paid in cryptocurrencies or the DAO's native token, attract talent and accelerate development. Proposals are publicly announced, interested parties submit solutions, and selected contributors receive bounties upon completion and approval of their work."}
>
  <MainWrapper
    title={"Bounties"}
    description={"Arbitrum DAO Bounties incentivize contributors to tackle specific tasks or challenges within the ecosystem. These rewards, paid in cryptocurrencies or the DAO's native token, attract talent and accelerate development. Proposals are publicly announced, interested parties submit solutions, and selected contributors receive bounties upon completion and approval of their work."}
    buttons={[
      {
        link: `${GITHUB_URL}/tree/main/src/content/Community_Bounties`,
        text: "List a Bounty",
        type: "default",
      },
    ]}
  />
  <Seperator />

  <section class="flex flex-col gap-2 py-5 md:gap-3 lg:gap-4 lg:py-10" id="sub">
    <button
      class="self-start rounded-full bg-primary-light px-3 py-2 font-os text-xs text-zinc-900 md:px-5 md:py-2.5 md:text-sm lg:py-3"
      >Bounties on Arbitrum DAO</button
    >
    <div
      class="flex flex-col gap-5 rounded-small border-[5px] border-zinc-200 bg-zinc-50 p-2 md:rounded-5xl lg:p-5"
    >
      <ul class="flex flex-col gap-4">
        {
          isNoData ? (
            <NoData type="bounties">
              Currently, there are no bounties available. Please check back
              later for any updates. Thank you for your understanding!
            </NoData>
          ) : (
            community &&
            community?.map(({ data, slug }) => (
              <li
                class={classNames(
                  "flex flex-col gap-3 rounded-xl border bg-white p-4 md:rounded-2xl lg:rounded-xl",
                )}
              >
                <div class="flex flex-col gap-2">
                  <div class="flex  items-center justify-between border-b pb-4 ">
                    <p class="text-base font-medium md:text-lg lg:text-xl">
                      ${data?.reward}
                    </p>
                    <div class="flex items-center gap-2">
                      <p class="font-os text-sm text-zinc-400 md:text-sm lg:text-base">
                        Level
                      </p>
                      <div
                        class={classNames(
                          "rounded-full border px-3 py-1 font-os text-xs capitalize  hover:border-primary hover:bg-primary-light hover:text-primary",
                          {
                            "border-green-700 bg-green-50 text-green-700":
                              data?.level === "beginner",
                            "border-yellow-700 bg-yellow-50 text-yellow-700":
                              data?.level === "intermediate",
                            "border-red-700 bg-red-50 text-red-700":
                              data?.level === "advanced",
                          },
                        )}
                      >
                        {data?.level}
                      </div>
                    </div>
                  </div>
                  <h1 class="text-base font-medium text-zinc-900 md:text-lg lg:text-xl">
                    {data?.title}
                  </h1>
                  <p class="font-os text-xs text-zinc-700 md:text-sm lg:text-base">
                    {data?.description}
                  </p>
                </div>
                <div class="mt-1 flex justify-end gap-3">
                  <Button href={data?.link}>
                    Debug{" "}
                    <Icon name="arrow-circle" class="ml-3 h-4 w-4 -rotate-45" />
                  </Button>
                </div>
              </li>
            ))
          )
        }
      </ul>
    </div>
  </section>
  <Seperator />
</MainLayout>
