---
import ArrowRotate from "@/components/ui/arrow-rotate.astro";
import Button from "@/components/ui/button.astro";
import GradientHead from "@/components/ui/gradient-head.astro";
import Tag from "@/components/ui/links/tag.astro";
import Seperator from "@/components/ui/seperator.astro";
import { Working_HomePage } from "@/consts";
import MainLayout from "@/layouts/MainLayout.astro";
import { paragraphCva, titleCva } from "@/lib/cvas";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

const groups = await getCollection("Working_Groups");
const { title, description } = Working_HomePage;
const wg = groups.filter((group) => group.data.type === "wg");
---

<MainLayout title={title} description={description} image="/meta/wg.png">
  <GradientHead
    className="my-5 lg:my-10"
    title={title}
    description={description}
  />
  <Seperator />
  <section
    class="flex flex-col-reverse gap-8 py-5 md:flex-row md:gap-9 lg:py-10"
  >
    <div class="flex flex-col gap-6 md:w-1/2">
      <h1 class={titleCva()}>What are Arbitrum DAO Working Groups?</h1>
      <p class={paragraphCva()}>
        Working groups, under the leadership of the Arbitrum DAO, specialize in
        distinct areas of project management and development. Notable groups
        include the Incentive Program, User Experience, Community Engagement,
        Arbitrum Research Development Collective, and Arbitrum DAO Procurement
        Committee. These decentralized entities operate independently, fostering
        community-led initiatives and decision-making separate from the
        Foundation. They ensure efficient resource allocation and community
        involvement, advancing Arbitrum DAO's objectives and governance
        structure.
      </p>
      <div class="mt-2 flex flex-row justify-around gap-6 md:flex-col">
        {
          [
            {
              title: "Lead Development",
              image: "/images/working-group/lead.svg",
            },
            {
              title: "Community Engagement",
              image: "/images/working-group/community.svg",
            },
          ].map(({ title, image }) => (
            <div class="flex flex-col items-center gap-3 md:flex-row md:gap-4">
              <Image
                src={image}
                alt={title}
                class="size-8 md:size-10 lg:size-12"
                width={100}
                height={100}
              />

              <h1
                class={titleCva({
                  size: "xs",
                })}
              >
                {title}
              </h1>
            </div>
          ))
        }
      </div>
    </div>
    <div class="md:w-1/2 lg:px-14 lg:py-8">
      <Image
        src="/images/working-group/main.svg"
        alt="Working Groups"
        class="w-full"
        width={600}
        height={400}
      />
    </div>
  </section>
  <Seperator />
  <section class="flex flex-col gap-4 py-5 lg:py-10">
    <h1 class="text-xl font-medium md:text-2xl lg:text-3xl">
      Current Workgroups
    </h1>
    <ul class="grid gap-6 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
      {
        wg?.map(({ data, slug }, i) => (
          <li class="flex min-h-96 flex-col justify-between rounded-small border bg-white p-5 md:rounded-3xl lg:rounded-5xl">
            <div class="flex flex-col gap-6">
              <div class="flex items-center justify-between">
                <h1 class="text-base font-medium">{data.title}</h1>
                <Tag>{data.tag}</Tag>
              </div>
              <p class="text-sm text-zinc-500">{data.description}</p>
            </div>
            <div class="mt-32 flex flex-col gap-4">
              {data.meetingOn && data.meetingLink && (
                <div class="flex gap-2 rounded-xl bg-zinc-100 p-2">
                  <div class="h-full w-2 rounded-full bg-zinc-400" />
                  <div class="flex flex-col gap-0.5 ">
                    <h2 class="text-sm font-medium">Meetings:</h2>
                    {data.meetingOn && (
                      <p class="text-sm font-medium">{data.meetingOn} </p>
                    )}
                    {data.meetingLink && (
                      <a
                        target="_blank"
                        href={data.meetingLink}
                        class="text-sm   text-primary underline"
                      >
                        {data.meetingTiming}
                      </a>
                    )}
                  </div>
                </div>
              )}
              <div class="flex items-center justify-between gap-3">
                <div class="flex gap-2">
                  <Button
                    variant={"secondary"}
                    size="sm"
                    className="flex gap-1"
                    href={data.githubUrl}
                  >
                    <Icon name="socials/github-outline" class="size-4" />
                    Github
                  </Button>
                  <Button
                    variant={"secondary"}
                    size="sm"
                    className="flex gap-1"
                    href={data.discordUrl}
                  >
                    <Icon name="socials/discord-outline" class="size-4" />
                    Discord
                  </Button>
                </div>
                <ArrowRotate href={`/working-groups/${slug}`} />
              </div>
            </div>
          </li>
        ))
      }
    </ul>
  </section>
  <Seperator />
</MainLayout>
