---
import BlogCard from "@/components/ui/cards/blog-card.astro";
import GradientHead from "@/components/ui/gradient-head.astro";
import RoundedNav from "@/components/ui/nav/rounded-nav.astro";
import NoDataImageLink from "@/components/ui/placeholders/no-data-image-link.astro";
import NoData from "@/components/ui/placeholders/no-data.astro";
import Seperator from "@/components/ui/seperator.astro";
import MainWrapper from "@/components/working-groups/Main-Wrapper.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
// import Meetings from "@/components/calenders/Meetings";
export async function getStaticPaths() {
  const groups = await getCollection("Working_Groups");
  const wb = groups.filter((group) => group.data.type === "wg");
  return wb.map((group) => {
    return {
      params: {
        slug: group.slug,
      },
      props: {
        group,
      },
    };
  });
}

const {
  group: { data, slug, render },
} = Astro.props;

const contributions = await getCollection(
  "Community_Contributions",
  ({ data }: any) =>
    data?.type?.discriminant === "wg" && data?.type?.value?.slug === slug,
);
---

<MainWrapper
  breadcrumbs={[
    { text: "Contributions", link: `/working-groups/${slug}/contributions` },
  ]}
  data={data}
  slug={slug}
  className="p-3 md:p-4"
>
  {
    contributions.length === 0 && (
      <NoDataImageLink
        link={
          data?.buttons?.filter((button) => button.text === "Learn More")[0]
            ?.link ?? "#"
        }
      />
    )
  }
  <ul class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
    {
      contributions.map(({ data, slug: subSlug }) => (
        <BlogCard
          blog={data}
          radius="inner"
          link={`/community-hub/contributions/${data.tag}/${subSlug}`}
        />
      ))
    }
  </ul>
</MainWrapper>
